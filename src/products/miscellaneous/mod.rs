// AUTO-GENERATED. DO NOT MODIFY. YOUR CHANGES WILL BE OVER-WRITTEN
mod message;
mod docs;
mod causes;
mod solutions;
mod description;
mod code;
mod from_code;

pub use message::*;
pub use docs::*;
pub use causes::*;
pub use solutions::*;
pub use description::*;
pub use code::*;
pub use from_code::*;

use serde::{Deserialize, Deserializer, Serialize, Serializer};
use serde::de::Error;
use standard_error::traits::{StandardErrorCodeTrait, StandardErrorFromCodeTrait};

#[derive(Debug, Clone)]
pub enum TwilioMiscellaneousError {
    ErrorCode13000,
    ErrorCode21616,
    ErrorCode13612,
    ErrorCode19023,
    ErrorCode51109,
    ErrorCode21227,
    ErrorCode21504,
    ErrorCode21406,
    ErrorCode51106,
    ErrorCode13241,
    ErrorCode21602,
    ErrorCode84004,
    ErrorCode21477,
    ErrorCode70156,
    ErrorCode94601,
    ErrorCode19041,
    ErrorCode21235,
    ErrorCode21222,
    ErrorCode91203,
    ErrorCode21237,
    ErrorCode21229,
    ErrorCode13234,
    ErrorCode15002,
    ErrorCode51108,
    ErrorCode21264,
    ErrorCode94403,
    ErrorCode20011,
    ErrorCode51113,
    ErrorCode21402,
    ErrorCode13616,
    ErrorCode70252,
    ErrorCode14220,
    ErrorCode70105,
    ErrorCode13618,
    ErrorCode94400,
    ErrorCode21475,
    ErrorCode13310,
    ErrorCode19035,
    ErrorCode21702,
    ErrorCode19026,
    ErrorCode21456,
    ErrorCode32017,
    ErrorCode51107,
    ErrorCode13111,
    ErrorCode21233,
    ErrorCode19033,
    ErrorCode94402,
    ErrorCode80403,
    ErrorCode19028,
    ErrorCode21623,
    ErrorCode19012,
    ErrorCode60002,
    ErrorCode61001,
    ErrorCode21242,
    ErrorCode32102,
    ErrorCode90015,
    ErrorCode60004,
    ErrorCode51110,
    ErrorCode22223,
    ErrorCode13420,
    ErrorCode30112,
    ErrorCode51114,
    ErrorCode21407,
    ErrorCode21457,
    ErrorCode51004,
    ErrorCode94303,
    ErrorCode51118,
    ErrorCode21607,
    ErrorCode21204,
    ErrorCode19029,
    ErrorCode13230,
    ErrorCode13222,
    ErrorCode32112,
    ErrorCode20004,
    ErrorCode13617,
    ErrorCode10003,
    ErrorCode19014,
    ErrorCode21403,
    ErrorCode21473,
    ErrorCode90030,
    ErrorCode19022,
    ErrorCode14213,
    ErrorCode21478,
    ErrorCode30016,
    ErrorCode20422,
    ErrorCode60005,
    ErrorCode21218,
    ErrorCode20021,
    ErrorCode90027,
    ErrorCode80606,
    ErrorCode14204,
    ErrorCode94304,
    ErrorCode13252,
    ErrorCode21207,
    ErrorCode21503,
    ErrorCode70004,
    ErrorCode13212,
    ErrorCode21472,
    ErrorCode21203,
    ErrorCode51105,
    ErrorCode21701,
    ErrorCode21239,
    ErrorCode51201,
    ErrorCode52116,
    ErrorCode20423,
    ErrorCode14221,
    ErrorCode11243,
    ErrorCode13611,
    ErrorCode20012,
    ErrorCode90016,
    ErrorCode21501,
    ErrorCode19010,
    ErrorCode32209,
    ErrorCode12301,
    ErrorCode80602,
    ErrorCode20500,
    ErrorCode90013,
    ErrorCode21620,
    ErrorCode51003,
    ErrorCode80903,
    ErrorCode21608,
    ErrorCode94500,
    ErrorCode21220,
    ErrorCode503,
    ErrorCode70052,
    ErrorCode13233,
    ErrorCode21613,
    ErrorCode21502,
    ErrorCode21231,
    ErrorCode51130,
    ErrorCode51116,
    ErrorCode51006,
    ErrorCode21101,
    ErrorCode70104,
    ErrorCode13313,
    ErrorCode20007,
    ErrorCode90017,
    ErrorCode11202,
    ErrorCode14101,
    ErrorCode30012,
    ErrorCode94200,
    ErrorCode21201,
    ErrorCode13510,
    ErrorCode90010,
    ErrorCode60003,
    ErrorCode13614,
    ErrorCode70155,
    ErrorCode90037,
    ErrorCode21226,
    ErrorCode21255,
    ErrorCode19011,
    ErrorCode19031,
    ErrorCode94401,
    ErrorCode70001,
    ErrorCode90041,
    ErrorCode80906,
    ErrorCode51125,
    ErrorCode13226,
    ErrorCode70251,
    ErrorCode21409,
    ErrorCode21422,
    ErrorCode51126,
    ErrorCode32006,
    ErrorCode19027,
    ErrorCode13615,
    ErrorCode11242,
    ErrorCode19021,
    ErrorCode21211,
    ErrorCode21705,
    ErrorCode52004,
    ErrorCode13610,
    ErrorCode21236,
    ErrorCode21604,
    ErrorCode19030,
    ErrorCode94002,
    ErrorCode32216,
    ErrorCode19032,
    ErrorCode80105,
    ErrorCode32016,
    ErrorCode13910,
    ErrorCode80407,
    ErrorCode13246,
    ErrorCode32103,
    ErrorCode70102,
    ErrorCode90032,
    ErrorCode11236,
    ErrorCode14202,
    ErrorCode11216,
    ErrorCode14111,
    ErrorCode70051,
    ErrorCode21210,
    ErrorCode80303,
    ErrorCode80905,
    ErrorCode61004,
    ErrorCode13217,
    ErrorCode80503,
    ErrorCode11320,
    ErrorCode13242,
    ErrorCode13245,
    ErrorCode51104,
    ErrorCode51122,
    ErrorCode20020,
    ErrorCode19042,
    ErrorCode12101,
    ErrorCode14211,
    ErrorCode21452,
    ErrorCode61000,
    ErrorCode21421,
    ErrorCode13312,
    ErrorCode20429,
    ErrorCode50068,
    ErrorCode51202,
    ErrorCode21471,
    ErrorCode70253,
    ErrorCode90012,
    ErrorCode21601,
    ErrorCode13221,
    ErrorCode14212,
    ErrorCode13251,
    ErrorCode51127,
    ErrorCode13299,
    ErrorCode403,
    ErrorCode13231,
    ErrorCode13120,
    ErrorCode21653,
    ErrorCode12300,
    ErrorCode51215,
    ErrorCode80604,
    ErrorCode32113,
    ErrorCode21453,
    ErrorCode19024,
    ErrorCode11235,
    ErrorCode90025,
    ErrorCode70106,
    ErrorCode10001,
    ErrorCode80605,
    ErrorCode13112,
    ErrorCode94100,
    ErrorCode90039,
    ErrorCode21209,
    ErrorCode11203,
    ErrorCode12100,
    ErrorCode61008,
    ErrorCode61005,
    ErrorCode14106,
    ErrorCode11217,
    ErrorCode13248,
    ErrorCode94600,
    ErrorCode13244,
    ErrorCode51131,
    ErrorCode80902,
    ErrorCode21420,
    ErrorCode11237,
    ErrorCode61003,
    ErrorCode90022,
    ErrorCode14108,
    ErrorCode20002,
    ErrorCode80406,
    ErrorCode21618,
    ErrorCode61007,
    ErrorCode19034,
    ErrorCode11770,
    ErrorCode60007,
    ErrorCode11300,
    ErrorCode80307,
    ErrorCode21241,
    ErrorCode19050,
    ErrorCode14105,
    ErrorCode80409,
    ErrorCode19025,
    ErrorCode404,
    ErrorCode13110,
    ErrorCode11200,
    ErrorCode51111,
    ErrorCode21224,
    ErrorCode14203,
    ErrorCode60006,
    ErrorCode21479,
    ErrorCode21451,
    ErrorCode90011,
    ErrorCode21480,
    ErrorCode13322,
    ErrorCode13254,
    ErrorCode11251,
    ErrorCode70103,
    ErrorCode90034,
    ErrorCode21212,
    ErrorCode13210,
    ErrorCode11201,
    ErrorCode20413,
    ErrorCode12102,
    ErrorCode51001,
    ErrorCode84001,
    ErrorCode90029,
    ErrorCode19040,
    ErrorCode32111,
    ErrorCode90018,
    ErrorCode94001,
    ErrorCode94201,
    ErrorCode13253,
    ErrorCode19004,
    ErrorCode19005,
    ErrorCode90019,
    ErrorCode400,
    ErrorCode13520,
    ErrorCode21609,
    ErrorCode51121,
    ErrorCode84002,
    ErrorCode11310,
    ErrorCode60008,
    ErrorCode94300,
    ErrorCode51112,
    ErrorCode94301,
    ErrorCode20005,
    ErrorCode32110,
    ErrorCode51120,
    ErrorCode21230,
    ErrorCode90038,
    ErrorCode21214,
    ErrorCode51007,
    ErrorCode80603,
    ErrorCode90026,
    ErrorCode13224,
    ErrorCode14206,
    ErrorCode94604,
    ErrorCode11241,
    ErrorCode13237,
    ErrorCode80405,
    ErrorCode21474,
    ErrorCode13250,
    ErrorCode13314,
    ErrorCode50069,
    ErrorCode51119,
    ErrorCode80610,
    ErrorCode21213,
    ErrorCode90036,
    ErrorCode13211,
    ErrorCode51005,
    ErrorCode12400,
    ErrorCode32114,
    ErrorCode21450,
    ErrorCode21454,
    ErrorCode21626,
    ErrorCode13410,
    ErrorCode21401,
    ErrorCode70153,
    ErrorCode70152,
    ErrorCode80202,
    ErrorCode20503,
    ErrorCode94000,
    ErrorCode13232,
    ErrorCode21901,
    ErrorCode19013,
    ErrorCode10004,
    ErrorCode19037,
    ErrorCode13213,
    ErrorCode11205,
    ErrorCode51102,
    ErrorCode51129,
    ErrorCode14223,
    ErrorCode410,
    ErrorCode94602,
    ErrorCode20003,
    ErrorCode80701,
    ErrorCode21217,
    ErrorCode21621,
    ErrorCode13249,
    ErrorCode13215,
    ErrorCode21202,
    ErrorCode21225,
    ErrorCode21455,
    ErrorCode94101,
    ErrorCode13235,
    ErrorCode51128,
    ErrorCode13236,
    ErrorCode21405,
    ErrorCode70002,
    ErrorCode21223,
    ErrorCode21900,
    ErrorCode15003,
    ErrorCode19003,
    ErrorCode15000,
    ErrorCode21240,
    ErrorCode21206,
    ErrorCode70053,
    ErrorCode80205,
    ErrorCode21228,
    ErrorCode21232,
    ErrorCode91202,
    ErrorCode51103,
    ErrorCode80908,
    ErrorCode80601,
    ErrorCode13710,
    ErrorCode14104,
    ErrorCode80402,
    ErrorCode90020,
    ErrorCode21221,
    ErrorCode20001,
    ErrorCode90028,
    ErrorCode30014,
    ErrorCode21100,
    ErrorCode21476,
    ErrorCode20426,
    ErrorCode90033,
    ErrorCode20009,
    ErrorCode94302,
    ErrorCode13613,
    ErrorCode11210,
    ErrorCode21219,
    ErrorCode21404,
    ErrorCode21622,
    ErrorCode61002,
    ErrorCode20008,
    ErrorCode51115,
    ErrorCode61006,
    ErrorCode20010,
    ErrorCode84003,
    ErrorCode21208,
    ErrorCode21200,
    ErrorCode90023,
    ErrorCode90035,
    ErrorCode80609,
    ErrorCode51124,
    ErrorCode70005,
    ErrorCode14205,
    ErrorCode80408,
    ErrorCode13243,
    ErrorCode21238,
    ErrorCode13320,
    ErrorCode30015,
    ErrorCode50353,
    ErrorCode21458,
    ErrorCode14201,
    ErrorCode70101,
    ErrorCode21243,
    ErrorCode51123,
    ErrorCode20023,
    ErrorCode70151,
    ErrorCode51002,
    ErrorCode80102,
    ErrorCode70003,
    ErrorCode90024,
    ErrorCode13255,
    ErrorCode14215,
    ErrorCode14102,
    ErrorCode12200,
    ErrorCode94501,
    ErrorCode80907,
    ErrorCode61009,
    ErrorCode20006,
    ErrorCode14110,
    ErrorCode80104,
    ErrorCode11215,
    ErrorCode14210,
    ErrorCode21205,
    ErrorCode19036,
    ErrorCode60001,
    ErrorCode70154,
    ErrorCode14103,
    ErrorCode13201,
    ErrorCode13311,
    ErrorCode11240,
    ErrorCode11220,
    ErrorCode21470,
    ErrorCode19020,
    ErrorCode30013,
    ErrorCode51101,
    ErrorCode94603,
    ErrorCode51117,
    ErrorCode21617,
    ErrorCode90040,
    ErrorCode90021,
    ErrorCode84000,
    ErrorCode80401,
    ErrorCode13325
}


impl<'de> Deserialize<'de> for TwilioMiscellaneousError {
            fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>
    where
        D: Deserializer<'de>
    {
            Ok(
                usize::deserialize(deserializer)
            .map(TwilioMiscellaneousError::from_code)?
            .ok_or_else(|| Error::custom("Invalid error code!"))?
            )
    }
}

impl Serialize for TwilioMiscellaneousError {
            fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>
    where
        S: Serializer,
    {
            usize::serialize(&self.code(), serializer)
    }
}

use crate::products::TwilioProductError;
impl Into<TwilioProductError> for TwilioMiscellaneousError {
    fn into(self) -> TwilioProductError {
        TwilioProductError::Miscellaneous(self)
    }
}

impl crate::products::SomeTwilioProductError for TwilioMiscellaneousError {}

